{"version":3,"sources":["Components/pages/Login.js","Components/pages/register.js","Components/pages/addmeal.js","Components/pages/userinfo.js","Components/pages/homepage.js","Components/pages/tests.js","Components/pages/adminlogin.js","App.js","reportWebVitals.js","index.js"],"names":["Login","cookieoperater","state","key","alert","cookie","save","path","setState","redirect","username","password","stat","Grid","container","component","Style","this","to","CssBaseline","item","sm","md","Paper","square","src","width","align","Avatar","Typography","variant","noValidate","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","Button","color","onClick","axios","get","headers","then","response","data","xs","Link","href","React","Component","Register","checkregister","post","firstname","lastname","email","calorycount","spacing","Addmealpopup","mealname","calory","note","props","closepopup","defaultValue","placeholder","varient","foodname","load","Userinfopopup","logout","put","remove","toggleemail","emailtoggle","togglename","nametoggle","Homepage","calorychange","calorylimit","calorybuttonpopup","barcolor","caloryinfo","meallistfetcher","day","selectdate","getDate","month","getMonth","year","getFullYear","meallist","barcolor1","barpercentage1","caloryinfo1","Date","addmealpopup","userinfopopup","currentcalory","redirectlogin","key1","map","index","ListItem","onMouseEnter","onMouseLeave","ListItemText","deletemeal","mealid","primary","Moment","date","format","aa","delete","strokeWidth","diameter","percentage","stroke","toggleaddmealpopup","fontSize","elevation","toggleuserinfopopup","height","togglecalorybuttonpopup","selected","List","disablePadding","meallistgenerator","bind","Popup","sss","msg","a1","ss","ok","qq","text","closePopup","Adminlogin","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dd00585.chunk.js","sourcesContent":["import React            from 'react';\nimport Avatar           from '@material-ui/core/Avatar';\nimport Button           from '@material-ui/core/Button';\nimport CssBaseline      from '@material-ui/core/CssBaseline';\nimport TextField        from '@material-ui/core/TextField';\nimport Link             from '@material-ui/core/Link';\nimport Paper            from '@material-ui/core/Paper';\nimport Grid             from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography       from '@material-ui/core/Typography';\nimport { Redirect }     from 'react-router';\nimport axios            from 'axios';\nimport cookie           from 'react-cookies';\n \n\nfunction redirection(stat){\n\n    return(\n      <div>\n\n          {stat? \n\n             null : <Redirect to=\"/homepage\"/>\n\n          }\n                    \n      </div>\n      );\n}\n\nexport default class Login extends React.Component {\n    \n    constructor(){\n\n        super();\n\n        this.state={\n\n            username:'',\n            password:'',\n            redirect:true,\n            key:0.0,\n\n        };\n    }\n   \n    cookieoperater=()=>{\n\n        if (this.state.key === 0.1 || this.state.key === 0.0 || this.state.key === 0)\n\n          alert('username or password is wrong');\n\n        else{\n\n            cookie.save('key',this.state.key, { path : '/' });\n            \n            this.setState({redirect:false})\n\n         }\n    }\n    \n    render(){ \n\n    return (\n\n        <Grid container \n              component=\"main\" \n              Style=\"height:100vh;\" >\n\n            {redirection(this.state.redirect)} \n            \n            <CssBaseline />\n\n            <Grid item sm={false} \n                       md={7} \n                  Style=\"background-image:url(nadine-primeau--ftWfohtjNw-unsplash.jpg);\n                         background-size:cover;\n                         background-position:center;\" />\n\n            <Grid item sm={12} \n                       md={5} \n                  component={Paper} \n                  square>\n\n            <br />\n\n                <img src=\"logo1.png\" \n                     width='40%' \n                     align='right' />\n                     \n            <br /><br /><br /><br /><br />\n\n                <div Style=\"display:flex;\n                           flex-direction:column;\n                           align-items:center;\n                           position:relative;\n                           height:100%;\n                           width:90%;\n                           left:5%;\">\n\n                    <Avatar Style=\"background-image:url(download.jpg);\n                                   background-size:100% 100%;\n                                   position:relative;\">\n\n                        < LockOutlinedIcon />\n\n                    </Avatar >\n\n                    <Typography component=\"h1\" \n                                variant=\"h5\">\n\n                        Login\n\n                    </Typography>\n                    \n                    <br /><br />\n\n                    <form Style=\"width:100%\" \n                          noValidate>\n                               \n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            onChange={(e) => { this.setState({ username: e.target.value }) }}\n                        />\n                        \n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={(e) => { this.setState({ password: e.target.value }) }}/>\n                            \n                        <br /><br /><br />\n\n                        <Button\n                            \n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => { axios.get('http://localhost:8080/login', { headers: { 'username': this.state.username, 'password': this.state.password } })\n                                                  .then(response => { this.setState({ key: response.data });  this.cookieoperater() })} }\n                           \n                        >\n                            Login\n\n                        </Button>\n\n                        <Grid container>\n\n                            <Grid item xs>\n\n                                \n\n                            </Grid>\n\n                            <Grid item>\n\n                                <Link href=\"/Register\" \n                                      variant=\"body2\">\n\n                                    {\"<=Register\"}\n                                     \n                                </Link>\n\n                            </Grid>\n\n                        </Grid>\n\n                    </form>\n\n                </div>\n\n            </Grid>\n            \n        </Grid>\n    );\n}\n}\n","import React            from 'react';\r\nimport Avatar           from '@material-ui/core/Avatar';\r\nimport Button           from '@material-ui/core/Button';\r\nimport CssBaseline      from '@material-ui/core/CssBaseline';\r\nimport TextField        from '@material-ui/core/TextField';\r\nimport Link             from '@material-ui/core/Link';\r\nimport Grid             from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography       from '@material-ui/core/Typography';\r\nimport Paper            from '@material-ui/core/Paper';\r\nimport axios            from 'axios';\r\n\r\n\r\nexport default class Register extends React.Component {\r\n    \r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state={\r\n\r\n            username:'',\r\n            firstname:'',\r\n            lastname:'',\r\n            email:'',\r\n            password:'',\r\n            calorycount:0.0,\r\n            redirect:false,\r\n        };\r\n    }\r\n\r\n    checkregister=()=>\r\n    {\r\n        \r\n            axios.post('http://localhost:8080/registeruser', \r\n                       { username: this.state.username, firstname: this.state.firstname, lastname: this.state.lastname, email: this.state.email, calorycount: this.state.calorycount },\r\n                       { headers: { 'psword': this.state.password } })\r\n                 .then(response=>{alert(response.data)})\r\n        \r\n    };\r\n\r\n       render(){\r\n\r\n        return (\r\n\r\n        <Grid container \r\n              component=\"main\"\r\n              Style=\"height:100vh\" >\r\n\r\n            <CssBaseline />\r\n                \r\n                <Grid item sm={12} \r\n                           md={5} \r\n                      component={Paper} \r\n                      square>\r\n                          \r\n                    <br/>\r\n\r\n                    <img src=\"logo1.png\" \r\n                         width='40%'  />\r\n\r\n                    <div Style=\"display:flex;\r\n                                flex-direction:column;\r\n                                align-items:center;\r\n                                width:90%;\r\n                                left:5%;\r\n                                position:relative;\">\r\n\r\n                        <br/>\r\n\r\n                        <Avatar Style=\"background-image:url(download.jpg);\r\n                                       background-size:100% 100%;\r\n                                       position:relative;\">\r\n\r\n                        < LockOutlinedIcon />\r\n\r\n                        </Avatar >\r\n\r\n                    <Typography component=\"h1\" \r\n                                variant=\"h5\">\r\n\r\n                            Register\r\n\r\n                    </Typography>\r\n                    \r\n                    <br />\r\n\r\n                    <form  noValidate \r\n                           Style=\"width:100%\">\r\n\r\n                        <Grid container \r\n                              spacing={2}>\r\n\r\n                            <Grid item md={12}>\r\n                                \r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    autoFocus\r\n                                    onChange={(e)=>{this.setState({username:e.target.value})}}\r\n                                />\r\n                                \r\n                            </Grid>\r\n                            \r\n                            \r\n                            <Grid item xs={12} md={6}>\r\n\r\n                                <TextField\r\n                                    name=\"firstname\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoComplete=\"firstname\"\r\n                                    autoFocus\r\n                                    onChange={(e) => { this.setState({ firstname: e.target.value })}}\r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} \r\n                                       md={6}>\r\n\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastname\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lastname\"\r\n                                    onChange={(e) => { this.setState({ lastname: e.target.value })}}\r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item md={12}>\r\n\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={(e) => { this.setState({ email: e.target.value })}}\r\n                                />\r\n\r\n                            </Grid>\r\n\r\n                            <Grid item md={12}>\r\n                                \r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={(e) => { this.setState({ password: e.target.value })}}\r\n                                    />\r\n                                    \r\n                            </Grid>\r\n\r\n                            <Grid item md={5}>\r\n                                \r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"calorycount\"\r\n                                    label=\"Daily calorycount\"\r\n                                    name=\"calorycount\"\r\n                                    onChange={(e) => { this.setState({ calorycount: e.target.value })}}\r\n                                    />\r\n                                    \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                        <br/><br/>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.checkregister}\r\n                        >\r\n                            Register\r\n\r\n                        </Button>\r\n\r\n                        <Grid container>\r\n                           \r\n                            <Grid item>\r\n\r\n                                <Link href=\"/Login\" \r\n                                      variant=\"body2\">\r\n\r\n                                     {\"Login=>\"}\r\n\r\n                                </Link>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n            </Grid>\r\n\r\n            <Grid item sm={false} \r\n                       md={7} \r\n                  Style=\"background-image:url(nadine-primeau--ftWfohtjNw-unsplash.jpg);\r\n                         background-size:cover;\r\n                         background-position:center;\" />\r\n                         \r\n            </Grid>\r\n    );\r\n}\r\n}","import React                   from 'react';\r\nimport Button                  from '@material-ui/core/Button';\r\nimport CloseIcon               from '@material-ui/icons/Close';\r\nimport TextField               from '@material-ui/core/TextField';\r\nimport Grid                    from '@material-ui/core/Grid';\r\nimport axios                   from 'axios';\r\nimport { Redirect }            from 'react-router';\r\nimport cookie                  from 'react-cookies';\r\n\r\nexport default class Addmealpopup extends React.Component {\r\n    \r\n   constructor(){\r\n\r\n      super();\r\n\r\n      this.state={\r\n         mealname:'',\r\n         calory:0.0,\r\n         note:'',\r\n         redirect:true,alert:'aa',\r\n      };\r\n\r\n   }\r\n\r\n\r\n    render() {\r\n\r\n        return ( \r\n            <div \r\n               Style = \"position:fixed;\r\n                        height:100%;\r\n                        width:100%;\r\n                        top:0;\r\n                        bottom:0;\r\n                        right:0;\r\n                        left:0;\r\n                        background-color:rgba(0,0,0,.5);\" >\r\n            <div \r\n               align=\"center\" \r\n               Style = \"position:fixed;\r\n                        height:60%;\r\n                        width:50%;\r\n                        top:20%;\r\n                        bottom:20%;\r\n                        left:25%;\r\n                        right:25%;\r\n                        background-color:white;\r\n                        border-radius:500px;\r\n                        border:1px solid red;\" >\r\n\r\n            <div align=\"right\">\r\n            <Button \r\n               Style = \"background-color:red;\r\n                        border-radius:60%;\r\n                        right:6%;\"\r\n               variant = \"contained\"\r\n               onClick = {this.props.closepopup} >\r\n            <CloseIcon/>\r\n            </Button>\r\n            </div >   \r\n                 <h3>Add your new Meal </h3> \r\n                 \r\n                    {this.state.alert}\r\n            <div Style=\"width:50%\" >\r\n\r\n            < TextField \r\n                   variant = \"filled\"\r\n                    margin = \"normal\" \r\n                    required fullWidth id = \"mealname\"\r\n                    label = \"Meal Name\"\r\n                    onChange={(e) => {this.setState({ mealname : e.target.value })}}\r\n                    autoFocus/> \r\n\r\n            <span Style=\"display:inline-block;\r\n                         width:100%\">\r\n\r\n            <Grid container>\r\n\r\n            <Grid item md={6} >\r\n\r\n            <b Style=\"position:relative;\r\n                      top:30px;\">\r\n\r\n            calory of the meal:\r\n\r\n            </b>\r\n\r\n            </Grid>\r\n\r\n            <Grid item md={6}>\r\n\r\n            <TextField \r\n               margin = \"normal\" \r\n               required fullWidth id = \"calory\"\r\n               defaultValue={this.state.calory}\r\n               onChange={(e) => {this.setState({calory : e.target.value})}}\r\n               type=\"number\"\r\n               autoFocus/>\r\n\r\n            </Grid>\r\n\r\n            </Grid>\r\n\r\n            </span>\r\n\r\n            <br/><br/><br/>\r\n\r\n            <input \r\n               Style = \"height:100px;\r\n                        width:300px;\"\r\n               type=\"text\" \r\n               placeholder=\"Note\" \r\n               onChange={(e) => {this.setState({note:e.target.value})}}\r\n               id=\"note\"/>\r\n\r\n            <br/><br/>\r\n\r\n            <Button \r\n               varient=\"contained\" \r\n               Style=\"background-color:red;\r\n                      bottom:3px\"\r\n               onClick={()=>{axios.post('http://localhost:8080/meal/post',\r\n                                            { foodname: this.state.mealname, note: this.state.note, calory: this.state.calory},\r\n                                            { headers: { 'key1': cookie.load('key'), 'calory': this.state.calory } })\r\n                                  .then(response => { alert(response.data); this.setState({ redirect: false }); })}}>\r\n\r\n                       SUBMIT\r\n\r\n            </Button>\r\n            {\r\n               this.state.redirect?\r\n               null:<Redirect to=\"/homepage\"/>\r\n            }\r\n            </div>\r\n\r\n            </div>  \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}","import React, \r\n        {Component}        from 'react';\r\nimport Button              from '@material-ui/core/Button';\r\nimport CloseIcon           from '@material-ui/icons/Close';\r\nimport Avatar              from '@material-ui/core/Avatar';\r\nimport MeetingRoom         from '@material-ui/icons/MeetingRoom';\r\nimport cookie              from 'react-cookies';\r\nimport { Redirect }        from 'react-router';\r\nimport axios               from 'axios';\r\n\r\nexport default class Userinfopopup extends React.Component {\r\n\r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state={\r\n            \r\n            nametoggle:true,\r\n            emailtoggle:true,\r\n            redirect:false,\r\n            username: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n            key:0.0,\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n        this.setState({\r\n            username: this.props.username,\r\n            firstname: this.props.firstname,\r\n            lastname: this.props.lastname,\r\n            email: this.props.email,\r\n            key: cookie.load('key')});\r\n    }\r\n\r\n    logout=()=>{\r\n\r\n        axios.put('http://localhost:8080/logout',{headers:{'key1':this.state.key}})\r\n\r\n        cookie.remove('key',{path:'/'});\r\n\r\n        this.setState({redirect:true});\r\n    }\r\n    \r\n    toggleemail=()=> {\r\n\r\n        axios.get('http://localhost:8080/user/update/email', { headers: { 'key1': this.state.key, 'email': this.state.email } })\r\n             .then(response => alert(response.data));\r\n\r\n        this.setState({\r\n            emailtoggle: !this.state.emailtoggle\r\n        });\r\n\r\n    }\r\n\r\n    togglename=()=> {\r\n\r\n        axios.get('http://localhost:8080/user/update/firstname', { headers: { 'key1': this.state.key, 'firstname': this.state.firstname } })\r\n             .then(response => alert(response.data));\r\n\r\n        axios.get('http://localhost:8080/user/update/lastname', { headers: { 'key1': this.state.key, 'lastname': this.state.lastname } })\r\n             .then(response => alert(response.data));\r\n\r\n        this.setState({\r\n            nametoggle: !this.state.nametoggle\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return ( \r\n\r\n        <div \r\n           Style = \"position:fixed;\r\n                    height:100%;\r\n                    width:100%;\r\n                    top:0;\r\n                    bottom:0;\r\n                    right:0;\r\n                    left:0;\r\n                    background-color:rgba(0,0,0,.5);\" >\r\n                        {\r\n                            this.state.redirect?\r\n                                <Redirect to='Login'/>:null\r\n                        }\r\n\r\n            <div \r\n               align=\"center\"\r\n               Style = \"position:fixed;\r\n                        height:50%;\r\n                        width:40%;\r\n                        top:25%;\r\n                        bottom:25%;\r\n                        left:30%;\r\n                        right:30%;\r\n                        background-color:white;\r\n                        border-radius:10px;\r\n                        border:2px solid blue\" >\r\n\r\n            <div  align = \"right\" >\r\n\r\n            <Button\r\n                Style = \"background-color:blue;\r\n                         align-items:right;\"\r\n                onClick = {this.props.closepopup} >\r\n            \r\n                  <CloseIcon color=\"secondary\"/>\r\n\r\n            </Button> \r\n\r\n            </div>\r\n\r\n            <div \r\n               align=\"left\" \r\n               Style=\"bottom:10;\">\r\n\r\n            <img src = \"logo1.png\"/>\r\n\r\n            </div>   \r\n\r\n            <Avatar \r\n               src = \"images.png\" \r\n               Style=\"border:3px solid lightgreen\" > \r\n\r\n            </Avatar>\r\n\r\n            <br/><br/>\r\n\r\n            <b Style=\"font-size:large\">\r\n\r\n            {\"Username : \"}\r\n\r\n            </b>\r\n              \r\n                <span>\r\n\r\n                    <b>\r\n\r\n                    {this.state.username}\r\n\r\n                    </b>\r\n                   \r\n                </span>\r\n              \r\n                \r\n            \r\n            <br/><br/>\r\n\r\n            <b Style=\"font-size:large\">\r\n\r\n            {\"Name : \"}\r\n\r\n            </b>\r\n            {\r\n                this.state.nametoggle?\r\n\r\n                <span>\r\n\r\n                    <b>\r\n                            {this.state.firstname}&nbsp;&nbsp;&nbsp;{this.state.lastname}\r\n                    </b> \r\n\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                    <Button \r\n                       variant=\"outlined\"  \r\n                       onClick={()=>{this.setState({\r\n                                nametoggle: !this.state.nametoggle\r\n                            })}}>\r\n\r\n                    {\"change\"}\r\n\r\n                    </Button>\r\n\r\n                </span>\r\n\r\n                :\r\n\r\n                <span>\r\n\r\n                    <input \r\n                       type=\"text\" \r\n                       placeholder={this.state.firstname} \r\n                       id=\"firstname\"\r\n                       onChange={(e)=>{this.setState({firstname:e.target.value})}}/>\r\n\r\n                    &nbsp; &nbsp; &nbsp;\r\n\r\n                    <input \r\n                       type=\"text\" \r\n                       id=\"lastname\" \r\n                       placeholder={this.state.lastname}\r\n                       onChange={(e)=>{this.setState({lastname:e.target.value})}}/> \r\n\r\n                    &nbsp;&nbsp;\r\n\r\n                    <Button \r\n                       Style=\"background-color:red;\" \r\n                       variant=\"outlined\" \r\n                       onClick={()=>{this.togglename()}}>\r\n\r\n                    enter\r\n\r\n                    </Button>\r\n\r\n                </span>\r\n            }\r\n\r\n            <br/><br/>\r\n\r\n            <b Style=\"font-size:large\">\r\n\r\n            {\"Emai : \"}\r\n\r\n            </b>\r\n\r\n            {\r\n                this.state.emailtoggle?\r\n\r\n                      <span>\r\n\r\n                          <b>\r\n\r\n                            {this.state.email}\r\n\r\n                          </b>\r\n\r\n                          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                          <Button \r\n                             variant=\"outlined\"  \r\n                             onClick={()=>{this.setState({\r\n                                emailtoggle: !this.state.emailtoggle\r\n                            })}}>\r\n\r\n                          {\"change\"}\r\n\r\n                          </Button>\r\n\r\n                     </span>\r\n\r\n                      :\r\n\r\n                      <span>\r\n\r\n                          <input \r\n                             type=\"email\" \r\n                             placeholder={this.state.email}\r\n                             id=\"email\" \r\n                             onChange={(e) => { this.setState({ email: e.target.value }) }}/> \r\n\r\n                          &nbsp;&nbsp;\r\n\r\n                          <Button \r\n                              Style=\"background-color:red;\" \r\n                              variant=\"outlined\"\r\n                              onClick={()=>{this.toggleemail()}}>\r\n\r\n                          enter\r\n\r\n                          </Button>\r\n\r\n                          </span>\r\n\r\n            }\r\n\r\n            <br/><br/>\r\n\r\n            < Button onClick={this.logout}> \r\n\r\n                < MeetingRoom color=\"secondary\"/>\r\n\r\n               <b Style=\"color:red\" >\r\n\r\n                   LOGOUT\r\n\r\n               </b>\r\n\r\n            </Button>\r\n\r\n            </div>   \r\n            \r\n            </div>\r\n        );\r\n    }\r\n}","import React,{Component}     from 'react';\r\nimport Paper                 from '@material-ui/core/Paper';\r\nimport SemiCircleProgressBar from \"react-progressbar-semicircle\";       \r\nimport Grid                  from '@material-ui/core/Grid';\r\nimport Button                from '@material-ui/core/Button';\r\nimport Typography            from '@material-ui/core/Typography';\r\nimport Avatar                from '@material-ui/core/Avatar';\r\nimport { List, ListItem,\r\n            ListItemText}    from '@material-ui/core';\r\nimport DeleteIcon            from '@material-ui/icons/Delete';\r\nimport AddCircleOutlineIcon  from '@material-ui/icons/AddCircleOutline';\r\nimport DatePicker            from \"react-datepicker\";\r\nimport                            \"react-datepicker/dist/react-datepicker.css\";\r\nimport Addmealpopup          from './addmeal';\r\nimport Userinfopopup         from './userinfo';\r\nimport TextField             from '@material-ui/core/TextField';\r\nimport Check                 from '@material-ui/icons/Check';\r\nimport cookie                from 'react-cookies';\r\nimport { Redirect }          from 'react-router';\r\nimport axios                 from 'axios';\r\nimport Moment                from 'moment';\r\n\r\n\r\nexport default class Homepage extends React.Component \r\n{\r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state={\r\n\r\n            barcolor:'lime',\r\n            \r\n            caloryinfo:'loading.....',\r\n            barcolor1:'lime',\r\n            barpercentage1:70,\r\n            caloryinfo1 :'Loading...',\r\n            username:'loading', \r\n            firstname:'loading', \r\n            lastname:'',\r\n            email:'',\r\n            calorylimit:'...',\r\n            note:'',\r\n            selectdate:new Date(),\r\n            addmealpopup:false,\r\n            userinfopopup:false,\r\n            calorybuttonpopup:true,\r\n            key:0.0,\r\n            meallist:'',\r\n            currentcalory: 'Loading...',\r\n            redirectlogin:false\r\n            \r\n        };\r\n    }\r\n    \r\n \r\n     toggleaddmealpopup(){\r\n\r\n         this.setState({ addmealpopup: !this.state.addmealpopup});\r\n\r\n         this.meallistfetcher();\r\n\r\n         this.barcolor();\r\n    };\r\n\r\n    toggleuserinfopopup(){\r\n\r\n        this.setState({userinfopopup:!this.state.userinfopopup});\r\n        \r\n    };\r\n\r\n    togglecalorybuttonpopup() {\r\n\r\n        this.setState({ calorybuttonpopup: !this.state.calorybuttonpopup });\r\n\r\n        this.barcolor();\r\n    };\r\n\r\n    componentWillMount(){\r\n\r\n        this.setState({key:cookie.load('key')});\r\n\r\n        axios.get(\"http://localhost:8080/checkkey\",{headers:{key1:cookie.load('key')}})\r\n             .then(response=>this.setState({redirectlogin:response.data}))\r\n\r\n        axios.get(\"http://localhost:8080/user/userdetailes\", { headers: { key1: cookie.load('key') } })\r\n             .then(response => {  this.setState({ calorylimit: response.data.calorycount, username: response.data.username, firstname: response.data.firstname, lastname: response.data.lastname, email: response.data.email })})\r\n\r\n        this.meallistfetcher();\r\n    };\r\n\r\n    calorychange=()=>{\r\n\r\n        axios.get('http://localhost:8080/user/update/calorycount?calorycount=' + this.state.calorylimit, { headers: { 'key1': this.state.key}} );\r\n\r\n        this.setState({ calorybuttonpopup: !this.state.calorybuttonpopup });\r\n\r\n        this.barcolor();\r\n    }\r\n\r\n    barcolor= () =>{\r\n\r\n        if ((this.state.caloryinfo / this.state.calorylimit * 100)>=100) { this.setState({ barcolor: 'red' })}\r\n\r\n        else\r\n              \r\n         {this.setState({ barcolor: 'lime' });}\r\n    }\r\n\r\n    meallistfetcher=()=>{\r\n\r\n        axios.post('http://localhost:8080/meal/gethistory', \r\n                     { day: this.state.selectdate.getDate(), month: this.state.selectdate.getMonth(), year: this.state.selectdate.getFullYear() },\r\n                     { headers: { 'key1': cookie.load('key')} })\r\n             .then(response => { this.setState({ meallist: response.data }) });\r\n\r\n        this.setState({ caloryinfo:0});\r\n\r\n        axios.get('http://localhost:8080/meal/getcalory', { headers: { 'key1': cookie.load('key') } })\r\n             .then(response => { this.setState({ caloryinfo: response.data }) });\r\n        \r\n        this.barcolor();\r\n    }\r\n    \r\n    meallistgenerator(){\r\n        \r\n        if(this.state.meallist=='') \r\n           return this.state.meallist;\r\n\r\n        else\r\n            return this.state.meallist.map((value, index) => {\r\n\r\n                return <ListItem Style=\"background-color:rgba(0,0,0,.1)\"\r\n                                 onMouseEnter={()=>{this.barcolor();this.setState({ note: value.note })}} \r\n                                 onMouseLeave={()=>{this.setState({ note: '' })}}>\r\n                           <ListItemText Style=\"width:1px\">\r\n                               <Button onClick={()=>{this.deletemeal(value.mealid)}}>\r\n                                   <DeleteIcon color=\"secondary\"/>\r\n                                </Button>\r\n                            </ListItemText> \r\n                            \r\n                            <ListItemText align='left' \r\n                                          Style=\"right:3%\" \r\n                                          primary={Moment(value.date).format('HH:mm')}>\r\n                            </ListItemText> \r\n                            \r\n                            <ListItemText align='middle'  \r\n                                          primary={value.foodname} >\r\n                            </ListItemText>\r\n                            \r\n                            <ListItemText align='right' \r\n                                          primary={value.calory} >\r\n                            </ListItemText>\r\n                            \r\n                            </ListItem>\r\n                        })\r\n    }\r\n\r\n    deletemeal(aa){\r\n\r\n        axios.delete('http://localhost:8080/meal/delete', { headers: { 'key1': cookie.load('key'),'mealid':aa } });\r\n\r\n        this.meallistfetcher();\r\n    }\r\n   \r\nrender(){\r\n\r\nreturn(\r\n    <div>\r\n        <Grid container \r\n              component={Paper} \r\n              Style=\"height:100vh;\r\n                     background-image:url(background.jpg);\r\n                     background-repeat:no-repeat;\r\n                     background-size:cover;\r\n                     background=position:center; \" >\r\n        \r\n        <Grid item sm={7} >\r\n\r\n            <img src=\"logo1.png\" \r\n                 width='30%'/>\r\n\r\n    <div Style=\"margin:15% 20%;\r\n                align-items:center;\r\n                text-align:center\" >\r\n\r\n                <SemiCircleProgressBar strokeWidth={50} \r\n                                       diameter={500} \r\n                                       percentage={(this.state.caloryinfo / this.state.calorylimit * 100)-(this.state.caloryinfo/this.state.calorylimit*100)%1}  \r\n                                       stroke={this.state.barcolor} />\r\n\r\n                <h1>\r\n                    {this.state.caloryinfo}/{this.state.calorylimit}\r\n                </h1>\r\n                <Button onClick={() => { this.toggleaddmealpopup()}}>\r\n                    Add \r\n                      <AddCircleOutlineIcon fontSize=\"large\" \r\n                                            color=\"primary\" />\r\n                    meal\r\n                </Button>\r\n\r\n                <Paper elevation={3} \r\n                       Style=\"font-size: large;\">\r\n                \r\n                {this.state.note}\r\n                \r\n                </Paper>\r\n\r\n    </div>\r\n\r\n        </Grid>\r\n\r\n        <Grid item sm={5}>\r\n\r\n                <div Style=\"margin:10% 10%;\r\n                            align-items:center;\r\n                            text-align:center\">\r\n\r\n                    <Button onClick={() => { this.toggleuserinfopopup() }}>\r\n\r\n                          <Avatar  >\r\n\r\n                               <img src=\"images.png\" height=\"100%\" width=\"100%\" /> \r\n\r\n                          </Avatar>\r\n\r\n                    </Button>\r\n                \r\n                    <h1 Style=\"font-family:courier\">\r\n                        \r\n                        Hello \r\n\r\n                        &nbsp;&nbsp;\r\n                        \r\n                        {this.state.firstname}\r\n                        \r\n                    </h1>\r\n               \r\n                <Typography component=\"h1\" \r\n                            variant=\"h5\" \r\n                            color=\"primary\" >\r\n\r\n                        Today you're max calory limit is \r\n                        \r\n                        {this.state.calorybuttonpopup?\r\n\r\n                            <Button Style=\"left:10px\" \r\n                                    variant=\"outlined\" \r\n                                    onClick={() => { this.togglecalorybuttonpopup()}} >\r\n\r\n                                {this.state.calorylimit}\r\n\r\n                            </Button>\r\n                            :\r\n                            <span >\r\n                                 < TextField Style=\"width:70px;\r\n                                                    left:10px;\"  \r\n                                             onChange={(e) => { this.setState({ calorylimit: e.target.value }) }} />\r\n\r\n                                 <span >\r\n\r\n                                     <Button Style=\"left:10px;\" \r\n                                             onClick={() => { this.calorychange()}}>\r\n\r\n                                                 <Check />\r\n                                                 \r\n                                     </Button >\r\n                                     \r\n                                 </span>\r\n                                 \r\n                            </span>\r\n                        }\r\n                        \r\n                    </Typography>\r\n                    \r\n                    <br/>\r\n\r\n                    <DatePicker selected={this.state.selectdate} \r\n                                onChange={(date) => {this.setState({selectdate:date});\r\n                                                     axios.post('http://localhost:8080/meal/gethistory',\r\n                                                                { day: date.getDate(), month:date.getMonth(), year:date.getFullYear() },\r\n                                                                { headers: { 'key1': cookie.load('key') } })\r\n                                                     .then(response => { this.setState({ meallist: response.data }) }); }} />\r\n\r\n                    <br/>\r\n                \r\n                    \r\n                <div> &nbsp; </div>\r\n\r\n                 <div Style=\"height:45vh;\r\n                             width:110%;\r\n                             overflow-y:scroll;\">\r\n                    \r\n                <List disablePadding  \r\n                      Style=\"background-color:rgba(0,0,0, 0.15);\">\r\n                        \r\n                        <ListItem Style=\"background-color:rgba(0,0,0, 0.2);\">\r\n\r\n                                <ListItemText >\r\n                                    \r\n                                </ListItemText> \r\n                                \r\n                                <ListItemText Style=\"color:green;\" \r\n                                              primary=\"Time \">\r\n                                \r\n                                </ListItemText> \r\n                                \r\n                                <ListItemText Style=\"color:blue;\" \r\n                                              align='middle' \r\n                                              primary=\"Food\" >\r\n                                        \r\n                                </ListItemText>\r\n                                \r\n                                <ListItemText Style=\"color:red;\" \r\n                                              align='right' \r\n                                              primary=\"Calory\" >\r\n\r\n                                </ListItemText>\r\n\r\n                        </ListItem>\r\n                    \r\n                        </List>\r\n                    \r\n                    {this.meallistgenerator()}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Grid>\r\n       \r\n    </Grid>\r\n\r\n     {\r\n            this.state.addmealpopup?\r\n                <Addmealpopup closepopup={this.toggleaddmealpopup.bind(this)}/> : null\r\n     }\r\n\r\n     {\r\n         this.state.userinfopopup?\r\n          <Userinfopopup closepopup={this.toggleuserinfopopup.bind(this)} \r\n                         username={this.state.username} \r\n                         firstname={this.state.firstname} \r\n                         lastname={this.state.lastname} \r\n                         email={this.state.email} \r\n                         key={this.state.key}/>\r\n          :\r\n\r\n          null\r\n     }\r\n     \r\n     {\r\n         this.state.redirectlogin?\r\n                <Redirect to='Login' /> : null\r\n     }\r\n    </div>\r\n);\r\n}\r\n}\r\n","import React          from 'react';\r\nimport axios          from 'axios';\r\nimport Button         from '@material-ui/core/Button';\r\nimport { Redirect }   from 'react-router';\r\nimport cookie         from 'react-cookies';\r\nimport DatePicker     from \"react-datepicker\";\r\nimport Moment         from 'moment';\r\n\r\nclass Popup extends React.Component {\r\n\r\nconstructor(){\r\n\r\n  super();\r\n    \r\n  this.state={\r\n \r\n  msg:'aaaa',\r\n  a1:'ssss',\r\n  ss:1,\r\n  ok:true,\r\n  qq:'',\r\n  date:new Date()\r\n  };\r\n}\r\n  sss = () => {\r\n    \r\n    axios.get('http://localhost:8080/test', { headers: { 'username':this.state.date } }).then(response => { alert(response.data); })\r\n              } \r\n              componentWillMount(){\r\n                this.setState({qq:this.props.qq})\r\n              }          \r\n\r\n  render() {\r\n    \r\n   \r\n    return (\r\n      <div Style=\"top:0;height:100vh;width:100%;background-color:rgba(0,0,0,.3);position:absolute;\">\r\n        <div Style=\"left:25%;top:25%;height:50%;width:50%;position:absolute;text-align:center;background-color:rgb(100,100,100);margin: auto;  \" >\r\n          <h1>{this.props.text}</h1>\r\n        <Button onClick={this.props.closePopup}>close me</Button>\r\n          <Button onClick={() => {this.sss()}}>here</Button>\r\n        \r\n        \r\n        {this.state.a1}\r\n          {\r\n            this.state.ok ?\r\n              \"     dddd\" : \"      hhhhhh\"\r\n          }\r\n          {\r\n            this.state.ok ?\r\n              null : <Redirect to=\"/homepage\" />\r\n          }{this.state.qq}\r\n        </div>\r\n   \r\n      </div>\r\n    );\r\n  }\r\n} \r\nexport default class Tests extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showPopup: false,\r\n      ansr:\"1\",\r\n      s: cookie.load('key'),\r\n      a: 'lsssssssss',\r\n      oo:'aaa' ,\r\n      data:'',\r\n      date: new Date(),\r\n      returndate:'ss'\r\n    };\r\n  }\r\n\r\n  togglePopup() {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup,\r\n      \r\n    });\r\n  }\r\n\r\n  comp(){\r\n    if (this.state.data == '') return this.state.data;\r\n    else return this.state.data.map((value, index) => { return <div>{value.foodname}&nbsp;{Moment(value.date).format('DD/MM/yyyy')}</div> });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div >\r\n        <h1>hihi</h1>\r\n        <button Style=\"cursor:pointer;\"onClick={this.togglePopup.bind(this)}>show popup</button>\r\n        <button onClick={() => {alert('woooooooot?');}}>try me when popup is open</button>\r\n        <p>hello.</p>\r\n        <button onClick={()=>{this.call()}}>click me</button>\r\n        {this.state.showPopup ? \r\n          <Popup\r\n            text='Close Me'\r\n            closePopup={this.togglePopup.bind(this)}\r\n            qq={this.state.a}\r\n          />\r\n          : null\r\n        }{this.state.s}\r\n        <button onClick={<Redirect to=\"/homepage\"/>} >homepage</button>\r\n        <Button onClick={()=>{cookie.save('userId', 'user1Id', { path: '/' })}} >press</Button>\r\n        \r\n        <Button onClick={() => { this.setState({ a: cookie.load('userId') }) }}>lets see</Button>\r\n        {this.state.a}\r\n        <div/>\r\n        <Button variant=\"outlined\" onClick={() => { axios.post('http://localhost:8080/tests', { username: 'richals' }).then(response => { this.setState({ oo: response.data.username }); });}}>tests</Button>\r\n        {this.state.oo}<div /><div /><div > &nbsp; </div >\r\n        <Button variant=\"contained\" onClick={()=>{axios.get('http://localhost:8080/meal/gethistory',{headers:{'key1':cookie.load('key')}}).then(response=>{this.setState({data:response.data})});alert(this.state.data.foodname);}}>{\"meal\"} &nbsp; {\"data\"}</Button>\r\n        {this.comp()}\r\n        <div/>\r\n        {this.state.date.getDate()}&nbsp;{this.state.date.getMonth() }&nbsp;{this.state.date.getFullYear()}<div/>\r\n        <DatePicker selected={this.state.date} onChange={(date1) => { this.setState({ date: date1 }); }} />\r\n        <div/>\r\n        {this.state.returndate}<Button onClick={() => { axios.post('http://localhost:8080/tests',{date:this.state.date.getDate(),month:this.state.date.getMonth(),year:this.state.date.getFullYear()}).then(response=>{this.setState({returndate:response.data})})}}>datechecker</Button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React      from 'react';\r\nimport Button     from '@material-ui/core/Button';\r\nimport TextField  from '@material-ui/core/TextField';\r\n\r\nexport default class Adminlogin extends React.Component{\r\n\r\n    \r\n    render(){\r\n\r\n    return(\r\n\r\n        < div  \r\n           Style = \"height:100vh;\r\n                    width:100%;\r\n                    background-image:url(arcreacter.jpg);\r\n                    background-size:cover;\r\n                    background-repeat: no-repeat;\" >\r\n        < div \r\n            Style = \"background-image:url(logo1.png);\r\n                     height:10%;\r\n                     width:33%;\r\n                     background-repeat:no-repeat;\r\n                     background-size:cover;\" />\r\n        <div   \r\n           Style=\"height:100vh;\r\n                  width:100vh\"\r\n           Style = \"width:40%;\r\n                    margin:10% auto;\" >\r\n\r\n        < TextField \r\n            variant = \"outlined\"\r\n            margin = \"normal\"  \r\n            Style=\"background-color:rgba(255,255,255,.3)\"\r\n            required fullWidth id = \"username\"\r\n            label = \"Username\"\r\n            name = \"username\"\r\n            autoComplete = \"username\" \r\n            color=\"secondary\"\r\n            autoFocus />  \r\n\r\n        <TextField \r\n            variant = \"outlined\"\r\n            margin = \"normal\"\r\n            required fullWidth name = \"password\"\r\n            Style = \"background-color:rgba(255,255,255,.3)\"\r\n            label = \"Password\"\r\n            type = \"password\"\r\n            color=\"secondary\"\r\n            id = \"password\"\r\n            autoComplete = \"current-password\"/>  <br /> <br /> \r\n\r\n        <Button \r\n            type = \"submit\"\r\n            fullWidth variant = \"contained\"\r\n            color = \"primary\">\r\n\r\n        Login \r\n        \r\n        </Button> \r\n            \r\n        </div>\r\n        \r\n        </div>\r\n    );\r\n    }\r\n}","import React                       from 'react'\nimport './App.css'\nimport { BrowserRouter as Router,\n         Switch,\n          Route }                  from 'react-router-dom'\nimport Login                       from './Components/pages/Login'\nimport Register                    from './Components/pages/register'\nimport Homepage                    from './Components/pages/homepage'\nimport Tests                       from './Components/pages/tests'\nimport Adminlogin                  from './Components/pages/adminlogin'\n\nfunction App() {\n\n\n  return (\n\n    <Router >\n\n      <Switch >\n\n\n        <Route\n          path=\"/login\"\n          component={Login} />\n\n        <Route\n          path=\"/register\"\n          component={Register} />\n\n        <Route\n          path=\"/homepage\"\n          component={Homepage} />\n       \n        <Route\n          path=\"/adminlogin\"\n          component={Adminlogin} />\n\n      </Switch>\n\n\n    </Router>\n\n\n  )\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}